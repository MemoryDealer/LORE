--- Features ---
-Fix gl 1282 regression
-Cleanup Node class, rename functions for local/world/full transform
-Also a regression in math tests for vector division, introduced somewhere during AABBs (was temporarily address with higher epsilon)
-Debug tools - view memory pools for each type, hover over to view details
-Add frame count mode to animations rather than delta time
-Re-organize to include/src directories
-In move to 3D support, associate stock resources directly with a renderer, instead of existing on their own
-RTT (add priority to renderview, RTTs are automatically rendered before window framebuffers)
-Multi-texturing
-Make UI code more convenient, for example in DebugUIConsole, it requires so much code to do basic setup.
  There needs to be pair structs for elements and their attachments, and factory functions to create them.
-Normal mapping
-Input: Mouse clicks hitting nodes (provide helper function that converts mouse coordinates to world)
  -Add key/mouse listeners
-Spriteless backgrounds - custom shaders for cool effects
-Node animations, Camera tracks - key frames
  Animation system for nodes with key frames
-Self-illumination for all lights
-Replace current boxes with regular rect and line drawing?
-CPU Particle systems
-Camera zooming should affect background scale
-Proper cleanup of resources
  Write a massive test for loading a huge scene, test number of "in use" memory pool items before/after destruction
-Compositors: visualize depth buffer (https://learnopengl.com/#!Advanced-OpenGL/Depth-testing)
-Box select of AABBs
-OOBBs
-Line rendering
-Post-processing effect factory to create entities to use render targets, provide helper functions to setup in one call
-Exception handling, all functions that do not throw should be noexcept
-Grid rendering
-Finish unit tests
-Use a null object pattern for the "active context", which is retrieved from a central location rather than statically in files

-Move ALL header function implementations to source files to stay consistent

--- Optimization ---
-TODO: Optimize text rendering to use a single texture, allow unicode.

--- 3D ---
-For rotating text: https://github.com/0xc0dec/stb-truetype-examples/blob/master/Example1.cpp

--- Plugins ---
-Lua scripting system, callbacks into bound lua scripts to nodes/scenes.
